package main.java.controller;

import java.util.List;

import com.itextpdf.text.Paragraph;
import com.itextpdf.text.pdf.PdfDocument;
import com.itextpdf.text.pdf.PdfWriter;

import javafx.collections.FXCollections;
import javafx.collections.ObservableList;
import javafx.fxml.FXML;
import javafx.fxml.FXMLLoader;
import javafx.scene.Parent;
import javafx.scene.Scene;
import javafx.scene.control.Alert;
import javafx.scene.control.Alert.AlertType;
import javafx.scene.control.Button;
import javafx.scene.control.Cell;
import javafx.scene.control.ListView;
import javafx.scene.layout.AnchorPane;
import javafx.scene.text.TextAlignment;
import javafx.stage.FileChooser;
import javafx.stage.Modality;
import javafx.stage.Stage;
import main.java.DAO.OrcamentoDAO;
import main.java.model.Orcamento;
import main.java.model.Produto;

public class PagePrincipalController {
//PANE
	@FXML
	private AnchorPane panePagePrincipal;

//BUTTON
	@FXML
	private Button abrirOrcamentoBTN;

	@FXML
	private Button baixarOrcamentoBTN;

	@FXML
	private Button criarOrcamentoBTN;

	@FXML
	private Button excluirOrcamentoBTN;

//LISTVIEW
	@FXML
	private ListView<String> listaCurriculos;

	private ObservableList<String> nomesOrcamentos = FXCollections.observableArrayList();
	private OrcamentoDAO orcamentoDAO = new OrcamentoDAO();
	
	@FXML
	public void initialize() {
		carregarNomesOrcamentos();
	}
	
	@FXML
	private void abrirPageOrcamento(Orcamento orcamento) {
		try {
            FXMLLoader loader = new FXMLLoader(getClass().getResource("/main/java/view/curriculo.fxml"));
            Parent root = loader.load();

            // Obtendo o controller da página de orçamento
            PageOrcamentoController controller = loader.getController();
            // controller.setOrcamento(orcamento); // Passar o orçamento para edição
            //  controller.setParentController(this); // Configurar referência ao controller principal

            // Abrindo a página
            Stage stage = new Stage();
            stage.setTitle(orcamento == null ? "Criar Orçamento" : "Editar Orçamento");
            stage.setScene(new Scene(root));
            stage.initModality(Modality.APPLICATION_MODAL);
            stage.showAndWait();

            // Atualizar a lista de orçamentos após o fechamento
            carregarNomesOrcamentos();
        } catch (Exception e) {
            e.printStackTrace();
        }
		
	}

	private void carregarNomesOrcamentos() {
		nomesOrcamentos.clear();
		List<Orcamento> orcamentos = orcamentoDAO.buscarTodos();
		for (Orcamento orcamento : orcamentos) {
			nomesOrcamentos.add(orcamento.getNomeOrcamento());
		}
		listaCurriculos.setItems(nomesOrcamentos);
	}

	@FXML
	private void criarOrcamento() {
		abrirPageOrcamento(null);
	}

	@FXML
	private void abrirOrcamento() {
		String nomeSelecionado = listaCurriculos.getSelectionModel().getSelectedItem();
		if (nomeSelecionado != null) {
			Orcamento orcamento = orcamentoDAO.buscarPorNome(nomeSelecionado);
			if (orcamento != null) {
				// Lógica para abrir a tela de modificação do orçamento selecionado
				abrirPageOrcamento(orcamento);
				exibirAlerta(AlertType.INFORMATION, "Abrir Orçamento", "Abrindo orçamento: " + nomeSelecionado);
			}
		} else {
			exibirAlerta(AlertType.WARNING, "Nenhum orçamento selecionado",
					"Por favor, selecione um orçamento para abrir.");
		}
	}

	@FXML
	private void excluirOrcamento() {
		String nomeSelecionado = listaCurriculos.getSelectionModel().getSelectedItem();
		if (nomeSelecionado != null) {
			Orcamento orcamento = orcamentoDAO.buscarPorNome(nomeSelecionado);
			if (orcamento != null) {
				orcamentoDAO.excluir(orcamento.getIdOrcamento());
				carregarNomesOrcamentos();
				exibirAlerta(AlertType.INFORMATION, "Exclusão", "Orçamento excluído com sucesso.");
			}
		} else {
			exibirAlerta(AlertType.WARNING, "Nenhum orçamento selecionado",
					"Por favor, selecione um orçamento para excluir.");
		}
	}

	

	private void exibirAlerta(AlertType tipo, String titulo, String mensagem) {
		Alert alerta = new Alert(tipo);
		alerta.setTitle(titulo);
		alerta.setContentText(mensagem);
		alerta.showAndWait();
	}
}
